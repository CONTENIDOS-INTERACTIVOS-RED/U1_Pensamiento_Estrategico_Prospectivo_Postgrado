{"remainingRequest":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo_Postgrado/U1_Pensamiento_Estrategico_Prospectivo_Postgrado/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo_Postgrado/U1_Pensamiento_Estrategico_Prospectivo_Postgrado/src/views/curso/Tema3.vue?vue&type=template&id=10135f66&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo_Postgrado/U1_Pensamiento_Estrategico_Prospectivo_Postgrado/src/views/curso/Tema3.vue","mtime":1733717177168},{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo_Postgrado/U1_Pensamiento_Estrategico_Prospectivo_Postgrado/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo_Postgrado/U1_Pensamiento_Estrategico_Prospectivo_Postgrado/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo_Postgrado/U1_Pensamiento_Estrategico_Prospectivo_Postgrado/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo_Postgrado/U1_Pensamiento_Estrategico_Prospectivo_Postgrado/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo_Postgrado/U1_Pensamiento_Estrategico_Prospectivo_Postgrado/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5wYi0zCiAgQmFubmVySW50ZXJubyg6c3ViVGl0dWxvPSInMy4gRXZhbHVhY2nDs24gZGUgbGEgdG9tYSBkZSBkZWNpc2lvbmVzIGVuIGVudG9ybm9zIGluY2llcnRvcyciKQogIC5jb250YWluZXIudGFyamV0YS50YXJqZXRhLS1ibGFuY2EucC00LnAtbWQtNQogICAgLnJvdy5tYi01CiAgICAgIC5jb2wtbGctOAogICAgICAgIHAubWItNCBFbiBsb3MgZW50b3Jub3MgYWN0dWFsZXMsIGRvbmRlIGxhIGluY2VydGlkdW1icmUgeSBlbCBjYW1iaW8gc29uIGNvbnN0YW50ZXMsIGxhIHRvbWEgZGUgZGVjaXNpb25lcyBlc3RyYXTDqWdpY2FzIHNlIGNvbnZpZXJ0ZSBlbiB1biBwcm9jZXNvIGNyw610aWNvLiBFbiBlc3RlIGNvbnRleHRvLCBsb3MgbMOtZGVyZXMgZGViZW4gc2VyIGNhcGFjZXMgZGUgZXZhbHVhciB5IGdlc3Rpb25hciBzaXR1YWNpb25lcyBjb24gaW5mb3JtYWNpw7NuIGluY29tcGxldGEsIHByZXZpZW5kbyByaWVzZ29zIHkgb3BvcnR1bmlkYWRlcyBmdXR1cmFzLiBBIGRpZmVyZW5jaWEgZGUgbGFzIGRlY2lzaW9uZXMgdG9tYWRhcyBlbiBjb25kaWNpb25lcyBkZSBjZXJ0ZXphLCBsYXMgcXVlIHNlIHJlYWxpemFuIGVuIGVudG9ybm9zIGluY2llcnRvcywgcmVxdWllcmVuIGhhYmlsaWRhZGVzIGFuYWzDrXRpY2FzIGF2YW56YWRhcyB5IHVuIGVuZm9xdWUgZmxleGlibGUgcXVlIHBlcm1pdGEgbGEgYWRhcHRhY2nDs24gY29udGludWEgKEJvYWRhICYgQ2FyZG9uYSBNb250b3lhLCAyMDIwKS4KICAgICAgICAuZm9uZG8tY29sb3Itc2lzdGVtYS1vLnAtNAogICAgICAgICAgLnJvdwogICAgICAgICAgICAuY29sLW1kLWF1dG8KICAgICAgICAgICAgICBmaWd1cmUubWItNC5tYi1sZy0wCiAgICAgICAgICAgICAgICBpbWcubXgtYXV0byhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWEzLzIuc3ZnIixzdHlsZT0ibWF4LXdpZHRoOiA5MHB4OyIpCiAgICAgICAgICAgIC5jb2wKICAgICAgICAgICAgICBwLm1iLTAgSGVyYmVydCBTaW3Ds24sIGNyZWFkb3IgZGVsIGNvbmNlcHRvIGRlIHJhY2lvbmFsaWRhZCBsaW1pdGFkYSwgZXhwbGljYSBxdWUgbGFzIHBlcnNvbmFzIG5vIHNpZW1wcmUgdGllbmVuIGFjY2VzbyBhIHRvZGEgbGEgaW5mb3JtYWNpw7NuIG5lY2VzYXJpYSwgbmkgZWwgdGllbXBvIHN1ZmljaWVudGUgcGFyYSB0b21hciBsYSBkZWNpc2nDs24gInBlcmZlY3RhIi4gRW4gc3UgbHVnYXIsIG9wdGFuIHBvciBkZWNpc2lvbmVzIHNhdGlzZmFjdG9yaWFzLCBlcyBkZWNpciwgYXF1ZWxsYXMgcXVlIHNvbiBzdWZpY2llbnRlbWVudGUgYnVlbmFzLCBkYWRhcyBsYXMgY2lyY3Vuc3RhbmNpYXMuIEVzdGEgaWRlYSBlcyBjbGF2ZSBwYXJhIGVudGVuZGVyIHBvciBxdcOpIGxhIGV2YWx1YWNpw7NuIGVzdHJhdMOpZ2ljYSBlbiBsYSBpbmNlcnRpZHVtYnJlLCByZXF1aWVyZSBmbGV4aWJpbGlkYWQgeSBjYXBhY2lkYWQgZGUgYWp1c3RlIGNvbnRpbnVvIChBYmFkLCAyMDE0KS4KCiAgICAgIC5jb2wtbGctNC5vcmRlci1maXJzdC5vcmRlci1sZy1sYXN0CiAgICAgICAgZmlndXJlLm1iLTQubWItbGctMAogICAgICAgICAgaW1nLm14LWF1dG8oc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMy8xLnBuZyIsc3R5bGU9Im1heC13aWR0aDogNDAwcHg7IikKICAgIAogICAgI3RfM18xLnRpdHVsby1zZWd1bmRvKGRhdGEtYW9zPSJmbGlwLXVwIikKICAgICAgaDIgI1tzcGFuIDMuMV0gUHJpbmNpcGFsZXMgZGVzYWbDrW9zCiAgICAKICAgIHAubWItNCBMb3MgcHJpbmNpcGFsZXMgZGVzYWbDrW9zIGVuIGxhIHRvbWEgZGUgZGVjaXNpb25lcyBiYWpvIGluY2VydGlkdW1icmUsIHNvbjoKCiAgICBJbWFnZW5JbmZvZ3JhZmljYS5jb2xvci1zZWN1bmRhcmlvLm1iLTUKICAgICAgdGVtcGxhdGUodi1zbG90OmltYWdlbikKICAgICAgICAuZm9uZG8tY29sb3Itc2lzdGVtYS1wLnAtNC5weS01CiAgICAgICAgICBmaWd1cmUucHktNQogICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hMy8zLnN2ZycsIGFsdD0nVGV4dG8gcXVlIGRlc2NyaWJhIGxhIGltYWdlbicpCgogICAgICAudGFyamV0YS5iZy13aGl0ZS5wLTQoeD0iMzAlIiB5PSI2OCUiIG51bWVybz0iKyIpCiAgICAgICAgLmg1Lm1iLTIgRmFsdGEgZGUgaW5mb3JtYWNpw7NuIGNvbXBsZXRhCiAgICAgICAgcC5tYi0wIEVuIGVudG9ybm9zIGluY2llcnRvcywgbm8gc2llbXByZSBzZSBkaXNwb25lIGRlIHRvZGEgbGEgaW5mb3JtYWNpw7NuIG5lY2VzYXJpYSBwYXJhIHByZXZlciBsb3MgcmVzdWx0YWRvcyBkZSB1bmEgZGVjaXNpw7NuLiBFc3RvIG9ibGlnYSBhIGxvcyB0b21hZG9yZXMgZGUgZGVjaXNpb25lcyBhIHRyYSBiYWphciBjb24gZGF0b3MgaW5jb21wbGV0b3MgbyBhbWJpZ3Vvcy4KCiAgICAgIC50YXJqZXRhLmJnLXdoaXRlLnAtNCh4PSI0My41JSIgeT0iNjglIiBudW1lcm89IisiKQogICAgICAgIC5oNS5tYi0yIFJpZXNnbyB5IGFtYmlnw7xlZGFkCiAgICAgICAgcC5tYi0xIExhIGdlc3Rpw7NuIGRlbCByaWVzZ28gZXMgdW4gYXNwZWN0byB0cmFuc3ZlcnNhbCBlbiBjdWFscXVpZXIgZXN0cmF0ZWdpYS4gRW4gdW4gZW50b3JubyBWVUNBLCBsYSBjYXBhY2lkYWQgZGUgYW50aWNpcGFyIHkgZ2VzdGlvbmFyIHJpZXNnb3MsIHJlc3VsdGEgZnVuZGFtZW50YWwgcGFyYSBhc2VndXJhciBsYSBjb250aW51aWRhZCBvcmdhbml6YWNpb25hbC4gRWwgYW7DoWxpc2lzIHByb3NwZWN0aXZvLCBwZXJtaXRlIGEgbGFzIG9yZ2FuaXphY2lvbmVzIHZpc3VhbGl6YXIgZnV0dXJvcyBwb3NpYmxlcyB5IHByZXBhcmFyIHBsYW5lcyBkZSBjb250aW5nZW5jaWEgcXVlIHJlc3BvbmRhbiBhIGRpZmVyZW50ZXMgZXNjZW5hcmlvcy4KICAgICAgICBwLm1iLTAgQSBkaWZlcmVuY2lhIGRlIGxhIHNpbXBsZSBwcmV2aXNpw7NuLCBsYSBnZXN0acOzbiBkZWwgcmllc2dvIGVuIGxhIGVzdHJhdGVnaWEgbW9kZXJuYSwgaW1wbGljYSB1bmEgZXZhbHVhY2nDs24gY29udGludWEgZGUgbG9zIGV2ZW50b3MgZW1lcmdlbnRlcy4gQXPDrSwgbGFzIG9yZ2FuaXphY2lvbmVzIHB1ZWRlbiBpZGVudGlmaWNhciBzZcOxYWxlcyBkw6liaWxlcyBkZWwgZW50b3JubyB5IHJlc3BvbmRlciBhbnRlcyBxdWUgbG9zIHJpZXNnb3Mgc2UgbWF0ZXJpYWxpY2VuIHBvciBjb21wbGV0by4gQm9hZGEgeSBDYXJkb25hIE1vbnRveWEgKDIwMjApIHN1YnJheWFuIGxhIGltcG9ydGFuY2lhIGRlIGNvbnRhciBjb24gbW9kZWxvcyBkZSBhbsOhbGlzaXMgcXVlIHBlcm1pdGFuIGFkYXB0YXJzZSByw6FwaWRhbWVudGUsIGEgbG9zIGNhbWJpb3MgaW1wcmV2aXN0b3MsIGdhcmFudGl6YW5kbyBsYSBlc3RhYmlsaWRhZCBlbiBlc2NlbmFyaW9zIGRlIGFsdGEgaW5jZXJ0aWR1bWJyZS4KCiAgICAgIC50YXJqZXRhLmJnLXdoaXRlLnAtNCh4PSI1Ni41JSIgeT0iNjglIiBudW1lcm89IisiKQogICAgICAgIC5oNS5tYi0yIFByZXNpw7NuIHBhcmEgZGVjaXNpb25lcyByw6FwaWRhcwogICAgICAgIHAubWItMCBFbiB1biBjb250ZXh0byBjYW1iaWFudGUsIGxhcyBkZWNpc2lvbmVzIG5vIHNvbG8gZGViZW4gc2VyIGFjZXJ0YWRhcywgc2lubyB0YW1iacOpbiBvcG9ydHVuYXMuIEVsIHRpZW1wbyBsaW1pdGFkbyBwYXJhIGRlbGliZXJhciwgcHVlZGUgYXVtZW50YXIgbGEgcHJvYmFiaWxpZGFkIGRlIGVycm9yLCBwb3IgbG8gcXVlIGVzIGZ1bmRhbWVudGFsIGNvbnRhciBjb24gcHJvY2Vzb3MgZWZlY3Rpdm9zIGRlIGV2YWx1YWNpw7NuIGVzdHJhdMOpZ2ljYS4KCiAgICAgIC50YXJqZXRhLmJnLXdoaXRlLnAtNCh4PSI3MCUiIHk9IjY4JSIgbnVtZXJvPSIrIikKICAgICAgICAuaDUubWItMiBFZmVjdG8gZGVsIHNlc2dvIGNvZ25pdGl2bwogICAgICAgIHAubWItMCBMb3MgdG9tYWRvcmVzIGRlIGRlY2lzaW9uZXMgbm8gc29uIGlubXVuZXMgYSBsb3Mgc2VzZ29zIGNvZ25pdGl2b3MsIHF1ZSBwdWVkZW4gaW5mbHVpciBlbiBzdSBqdWljaW8uIExhIGhldXLDrXN0aWNhIHkgbG9zIHByZWp1aWNpb3MgaW5jb25zY2llbnRlcywgcHVlZGVuIGxsZXZhciBhIGRlY2lzaW9uZXMgc3Viw7NwdGltYXMsIGVzcGVjaWFsbWVudGUgZW4gc2l0dWFjaW9uZXMgZGUgYWx0YSBpbmNlcnRpZHVtYnJlLgogICAgCiAgICAjdF8zXzIudGl0dWxvLXNlZ3VuZG8oZGF0YS1hb3M9ImZsaXAtdXAiKQogICAgICBoMiAjW3NwYW4gMy4yXSBIZXJyYW1pZW50YXMgcGFyYSBsYSB0b21hIGRlIGRlY2lzaW9uZXMgZXN0cmF0w6lnaWNhcywgZW4gaW5jZXJ0aWR1bWJyZQogICAgCiAgICAucm93Lm1iLTQKICAgICAgLmNvbC1sZy00CiAgICAgICAgZmlndXJlLm1iLTQubWItbGctMAogICAgICAgICAgaW1nLm14LWF1dG8oc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMy80LnBuZyIsc3R5bGU9Im1heC13aWR0aDogNDAwcHg7IikKICAgICAgLmNvbC1sZy04CiAgICAgICAgcC5tYi00IEVsIHVzbyBkZSBoZXJyYW1pZW50YXMgcHJvc3BlY3RpdmFzLCBoYSBkZW1vc3RyYWRvIHNlciBlc2VuY2lhbCBkdXJhbnRlIGxhIHBhbmRlbWlhIGRlbCBDT1ZJRC0xOS4gSW5kdXN0cmlhcyBjb21vIGxhIHNhbHVkIHkgbGEgYXZpYWNpw7NuLCBhcGxpY2Fyb24gYW7DoWxpc2lzIGRlIGVzY2VuYXJpb3MgcGFyYSBwcmV2ZXIgbGFzIGZsdWN0dWFjaW9uZXMgZW4gbGEgZGVtYW5kYSB5IGxvcyBjYW1iaW9zIHJlZ3VsYXRvcmlvcywgcGVybWl0acOpbmRvbGVzIGFqdXN0YXIgc3VzIG9wZXJhY2lvbmVzIGNvbiBhZ2lsaWRhZC4gRXN0YSBleHBlcmllbmNpYSBkZXN0YWNhIGPDs21vIGxhIHByb3NwZWN0aXZhIGVzdHJhdMOpZ2ljYSBubyBzb2xvIG1pbmltaXphIHJpZXNnb3MsIHNpbm8gcXVlIHRhbWJpw6luIGdlbmVyYSBvcG9ydHVuaWRhZGVzIGRlIGlubm92YWNpw7NuIGVuIG1vbWVudG9zIGRlIGNyaXNpcyAoQm9hZGEgJiBDYXJkb25hIE1vbnRveWEsIDIwMjApLgoKICAgICAgICAuZm9uZG8tY29sb3Itc2lzdGVtYS1pLnAtNAogICAgICAgICAgLnJvdwogICAgICAgICAgICAuY29sLW1kLWF1dG8KICAgICAgICAgICAgICBmaWd1cmUubWItNC5tYi1sZy0wCiAgICAgICAgICAgICAgICBpbWcubXgtYXV0byhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWEzLzUuc3ZnIixzdHlsZT0ibWF4LXdpZHRoOiA5MHB4OyIpCiAgICAgICAgICAgIC5jb2wKICAgICAgICAgICAgICBwLm1iLTAgTGFzIG9yZ2FuaXphY2lvbmVzIHF1ZSBhZG9wdGFuIGVzdGEgcHLDoWN0aWNhLCBkZXNhcnJvbGxhbiBlc3RyYXRlZ2lhcyByZXNpbGllbnRlcywgcHJlcGFyw6FuZG9zZSBwYXJhIGVuZnJlbnRhciBtw7psdGlwbGVzIHJldG9zICBmdXR1cm9zLiBFbiB1biBlbnRvcm5vIGluY2llcnRvLCBsYSBmbGV4aWJpbGlkYWQgb3BlcmF0aXZhIHkgbGEgY2FwYWNpZGFkIGRlIHZpc3VhbGl6YXIgZXNjZW5hcmlvcywgc29uIGVsZW1lbnRvcyBkaWZlcmVuY2lhZG9yZXMgcXVlIGdhcmFudGl6YW4gbGEgY29tcGV0aXRpdmlkYWQgYSBsYXJnbyBwbGF6by4gUG9yIGVuZGUsIHNlIHJlY29taWVuZGEgdGVuZXIgZW4gY3VlbnRhIGxvcyBzaWd1aWVudGVzIGNyaXRlcmlvcyBlbiBtb21lbnRvcyBkZSBpbmNlcnRpZHVtYnJlOgoKICAgIC5mb25kby1wZXJzb25hbGl6YWRvLTEuZjIubWItNQogICAgICAuZm9uZG8tcGVyc29uYWxpemFkby0xX19jb250ZW5pZG8ucHktNQogICAgICAgIFNseWRlckEodGlwbz0iYiIpLmJnLXdoaXRlCiAgICAgICAgICAucm93LnAtNC5wLW1kLTUKICAgICAgICAgICAgLmNvbC1sZy03Lm1iLTQubWItbGctMAogICAgICAgICAgICAgIHAudGV4dC1ib2xkLm1iLTQgQW7DoWxpc2lzIGRlIGVzY2VuYXJpb3MKICAgICAgICAgICAgICBwLm1iLTAgRXN0YSBtZXRvZG9sb2fDrWEgcGVybWl0ZSBpZGVudGlmaWNhciBkaWZlcmVudGVzIGZ1dHVyb3MgcG9zaWJsZXMgeSBwcmVwYXJhciBlc3RyYXRlZ2lhcyBwYXJhIGNhZGEgdW5vIGRlIGVsbG9zLiBFbCBhbsOhbGlzaXMgZGUgZXNjZW5hcmlvcyBlcyDDunRpbCBwYXJhIGFudGljaXBhciBjYW1iaW9zIHkgZGVzYXJyb2xsYXIgcmVzcHVlc3RhcyBhZGFwdGF0aXZhcyAoQm9hZGEgJiBDYXJkb25hIE1vbnRveWEsIDIwMjApLgogICAgICAgICAgICAuY29sLWxnLTUKICAgICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWEzLzYucG5nJykKICAgICAgICAgIC5yb3cucC00LnAtbWQtNQogICAgICAgICAgICAuY29sLWxnLTcubWItNC5tYi1sZy0wCiAgICAgICAgICAgICAgcC50ZXh0LWJvbGQubWItNCDDgXJib2xlcyBkZSBkZWNpc2nDs24KICAgICAgICAgICAgICBwLm1iLTAgRXN0YSBoZXJyYW1pZW50YSBncsOhZmljYSBheXVkYSBhIHZpc3VhbGl6YXIgbGFzIHBvc2libGVzIGRlY2lzaW9uZXMgeSBzdXMgY29uc2VjdWVuY2lhcy4gQ2FkYSByYW1hIGRlbCDDoXJib2wgcmVwcmVzZW50YSB1bmEgZGVjaXNpw7NuIG8gdW4gZXZlbnRvIHBvc2libGUsIHBlcm1pdGllbmRvIGV2YWx1YXIgbGFzIG9wY2lvbmVzIHkgc3VzIHJpZXNnb3MgYXNvY2lhZG9zLgogICAgICAgICAgICAuY29sLWxnLTUKICAgICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWEzLzcucG5nJykKICAgICAgICAgIC5yb3cucC00LnAtbWQtNQogICAgICAgICAgICAuY29sLWxnLTcubWItNC5tYi1sZy0wCiAgICAgICAgICAgICAgcC50ZXh0LWJvbGQubWItNCBFdmFsdWFjacOzbiBwcm9zcGVjdGl2YQogICAgICAgICAgICAgIHAubWItMCBMYSBwcm9zcGVjdGl2YSBlc3RyYXTDqWdpY2EgcGVybWl0ZSBwcmV2ZXIgdGVuZGVuY2lhcyB5IHBvc2libGVzIGRlc2Fycm9sbG9zIGZ1dHVyb3MsIHJlZHVjaWVuZG8gbGEgaW5jZXJ0aWR1bWJyZSBtZWRpYW50ZSBsYSBwbGFuaWZpY2FjacOzbiBhbnRpY2lwYWRhIChCYXMgQW1vcsOzcywgMjAxMykuIEVzdGEgdMOpY25pY2EgZXMgZXNlbmNpYWwgcGFyYSBsYSBnZXN0acOzbiBkZWwgcmllc2dvIGVuIGVudG9ybm9zIGRpbsOhbWljb3MuCiAgICAgICAgICAgIC5jb2wtbGctNQogICAgICAgICAgICAgIGZpZ3VyZQogICAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYTMvOC5wbmcnKQogICAgICAgICAgLnJvdy5wLTQucC1tZC01CiAgICAgICAgICAgIC5jb2wtbGctNy5tYi00Lm1iLWxnLTAKICAgICAgICAgICAgICBwLnRleHQtYm9sZC5tYi00IFRvbWEgZGUgZGVjaXNpb25lcyBjb2xhYm9yYXRpdmEKICAgICAgICAgICAgICBwLm1iLTAgSW52b2x1Y3JhciBhIG3Dumx0aXBsZXMgYWN0b3JlcyBlbiBlbCBwcm9jZXNvIGRlIGRlY2lzacOzbiBmYWNpbGl0YSBsYSBpZGVudGlmaWNhY2nDs24gZGUgbcOhcyByaWVzZ29zIHkgb3BvcnR1bmlkYWRlcywgZW5yaXF1ZWNpZW5kbyBlbCBhbsOhbGlzaXMgZXN0cmF0w6lnaWNvLgogICAgICAgICAgICAuY29sLWxnLTUKICAgICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWEzLzkucG5nJykKICAgICAgICAgIC5yb3cucC00LnAtbWQtNQogICAgICAgICAgICAuY29sLWxnLTcubWItNC5tYi1sZy0wCiAgICAgICAgICAgICAgcC50ZXh0LWJvbGQubWItNCBVc28gZGUgaW50ZWxpZ2VuY2lhIGFydGlmaWNpYWwgZW4gZWwgYW7DoWxpc2lzIHByb3NwZWN0aXZvCiAgICAgICAgICAgICAgcC5tYi0wIEVuIGxhIGFjdHVhbGlkYWQsIGxhIGludGVsaWdlbmNpYSBhcnRpZmljaWFsIChJQSkgc2UgaGEgY29udmVydGlkbyBlbiB1bmEgaGVycmFtaWVudGEgY2xhdmUgcGFyYSBlbCBhbsOhbGlzaXMgcHJvc3BlY3Rpdm8uIEVtcHJlc2FzIGNvbW8gSUJNIHkgTWljcm9zb2Z0LCB1dGlsaXphbiBhbGdvcml0bW9zIGRlIGFwcmVuZGl6YWplIGF1dG9tw6F0aWNvLCBwYXJhIHByZXZlciB0ZW5kZW5jaWFzIGVuIGVsIG1lcmNhZG8geSBkaXNlw7FhciBlc2NlbmFyaW9zIGFsdGVybmF0aXZvcy4gTGEgaW50ZWdyYWNpw7NuIGRlIElBIHBlcm1pdGUgYW5hbGl6YXIgZ3JhbmRlcyB2b2zDum1lbmVzIGRlIGRhdG9zIGVuIHRpZW1wbyByZWFsLCBmYWNpbGl0YW5kbyBsYSB0b21hIGRlIGRlY2lzaW9uZXMgZXN0cmF0w6lnaWNhcyBtw6FzIGluZm9ybWFkYXMgeSBwcm9hY3RpdmFzLgogICAgICAgICAgICAuY29sLWxnLTUKICAgICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWEzLzEwLnBuZycpCgogICAgI3RfM18zLnRpdHVsby1zZWd1bmRvKGRhdGEtYW9zPSJmbGlwLXVwIikKICAgICAgaDIgI1tzcGFuIDMuM10gSW1wb3J0YW5jaWEgZGVsIGZlZWRiYWNrIHkgbGEgZXZhbHVhY2nDs24gY29udGludWEKCiAgICBwLm1iLTQgVW5hIGNhcmFjdGVyw61zdGljYSBjbGF2ZSBkZSBsYSB0b21hIGRlIGRlY2lzaW9uZXMgZW4gZW50b3Jub3MgaW5jaWVydG9zLCBlcyBsYSBuZWNlc2lkYWQgZGUgdW5hIGV2YWx1YWNpw7NuIGNvbnRpbnVhIHkgdW5hIHJldHJvYWxpbWVudGFjacOzbi4gRXN0byBpbXBsaWNhIG1vbml0b3JlYXIgbG9zIHJlc3VsdGFkb3MgZGUgbGFzIGRlY2lzaW9uZXMgeSByZWFsaXphciBhanVzdGVzIGNvbmZvcm1lIHNlIGRlc2Fycm9sbGEgZWwgY29udGV4dG8uIExhIGNhcGFjaWRhZCBkZSBhcHJlbmRpemFqZSBvcmdhbml6YWNpb25hbCwgZXMgZnVuZGFtZW50YWwgcGFyYSBtZWpvcmFyIGxhIHRvbWEgZGUgZGVjaXNpb25lcyB5IG1pbmltaXphciBlcnJvcmVzIGZ1dHVyb3MgKENow6F2ZXogTWFydMOtbmV6LCAyMDAzKS4KCiAgICAucm93CiAgICAgIC5jb2wtbGctNAogICAgICAgIGZpZ3VyZS5tYi00Lm1iLWxnLTAKICAgICAgICAgIGltZy5teC1hdXRvKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTMvMTEucG5nIixzdHlsZT0ibWF4LXdpZHRoOiA0MDBweDsiKQogICAgICAuY29sLWxnLTgKICAgICAgICAuZm9uZG8tY29sb3Itc2lzdGVtYS1uLnAtNC5tYi00Lm1iLWxnLTUKICAgICAgICAgIC5yb3cKICAgICAgICAgICAgLmNvbC1tZC1hdXRvCiAgICAgICAgICAgICAgZmlndXJlLm1iLTQubWItbWQtMAogICAgICAgICAgICAgICAgaW1nLm14LWF1dG8oc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMy8xMi5zdmciLHN0eWxlPSJtYXgtd2lkdGg6IDkwcHg7IikKICAgICAgICAgICAgLmNvbAogICAgICAgICAgICAgIHAubWItMCAjW2IgRWplbXBsbyBwcsOhY3RpY286IGRlY2lzaW9uZXMgZXN0cmF0w6lnaWNhcyBlbiB1bmEgY3Jpc2lzLl0gRHVyYW50ZSBsYSBwYW5kZW1pYSBkZWwgQ09WSUQtMTksIG11Y2hhcyBlbXByZXNhcyB0dXZpZXJvbiBxdWUgdG9tYXIgZGVjaXNpb25lcyBlc3RyYXTDqWdpY2FzIGJham8gY29uZGljaW9uZXMgZGUgZXh0cmVtYSBpbmNlcnRpZHVtYnJlLiBPcmdhbml6YWNpb25lcyBxdWUgdXRpbGl6YXJvbiBhbsOhbGlzaXMgZGUgZXNjZW5hcmlvcywgcHVkaWVyb24gcmVzcG9uZGVyIHLDoXBpZGFtZW50ZSBhIGxvcyBjYW1iaW9zIGRlbCBtZXJjYWRvLCBhanVzdGFuZG8gc3VzIG1vZGVsb3MgZGUgbmVnb2NpbyB5IGFkb3B0YW5kbyBudWV2YXMgdGVjbm9sb2fDrWFzIHBhcmEgY29udGludWFyIG9wZXJhbmRvLgogICAgICAgIHAubWItMCBMYSB0b21hIGRlIGRlY2lzaW9uZXMgZXN0cmF0w6lnaWNhcyBlbiBlbnRvcm5vcyBpbmNpZXJ0b3MsIGVzIHVuIHByb2Nlc28gY29tcGxlam8gcXVlIHJlcXVpZXJlIHByZXBhcmFjacOzbiwgZmxleGliaWxpZGFkIHkgaGVycmFtaWVudGFzIGFkZWN1YWRhcyBwYXJhIG1pbmltaXphciByaWVzZ29zIHkgYXByb3ZlY2hhciBvcG9ydHVuaWRhZGVzLiBFbCB1c28gZGUgbWV0b2RvbG9nw61hcyBjb21vIGVsIGFuw6FsaXNpcyBkZSBlc2NlbmFyaW9zLCBqdW50byBjb24gbGEgZXZhbHVhY2nDs24gY29udGludWEsIHBlcm1pdGUgYSBsb3MgbMOtZGVyZXMgdG9tYXIgZGVjaXNpb25lcyBtw6FzIGluZm9ybWFkYXMgeSByZXNpbGllbnRlcywgbWF4aW1pemFuZG8gbGFzIHBvc2liaWxpZGFkZXMgZGUgw6l4aXRvIGVuIHVuIGVudG9ybm8gZGluw6FtaWNvLgoKICAgICAKCg=="},null]}